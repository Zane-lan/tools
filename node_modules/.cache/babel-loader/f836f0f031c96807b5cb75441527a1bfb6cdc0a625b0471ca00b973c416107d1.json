{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"json-formatter\"\n};\nconst _hoisted_2 = {\n  class: \"input-area\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_4 = {\n  class: \"button-group\"\n};\nconst _hoisted_5 = {\n  class: \"output-area\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"json-output\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"placeholder\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_json_pretty = _resolveComponent(\"json-pretty\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"JSON 输入\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.jsonInput = $event),\n    placeholder: \"请输入 JSON 字符串\",\n    class: _normalizeClass([\"json-input\", {\n      error: $setup.errorMessage\n    }])\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.jsonInput]]), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.formatJson && $setup.formatJson(...args))\n  }, \"格式化 JSON\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.compressJson && $setup.compressJson(...args)),\n    class: \"compress-btn\"\n  }, \"压缩 JSON\")])]), _createElementVNode(\"div\", _hoisted_5, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"格式化 / 压缩结果\", -1 /* HOISTED */)), $setup.formattedJson ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode(_component_json_pretty, {\n    data: $setup.parsedJson,\n    deep: 3\n  }, null, 8 /* PROPS */, [\"data\"])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"格式化或压缩后的 JSON 将在此显示\"))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","$event","$setup","jsonInput","placeholder","_normalizeClass","error","errorMessage","_hoisted_3","_toDisplayString","_createCommentVNode","_hoisted_4","onClick","args","formatJson","compressJson","_hoisted_5","formattedJson","_hoisted_6","_createVNode","_component_json_pretty","data","parsedJson","deep","_hoisted_7"],"sources":["/Volumes/data/project/my_web/tools/src/views/ParseJson.vue"],"sourcesContent":["<template>\n    <div class=\"json-formatter\">\n        <div class=\"input-area\">\n            <h2>JSON 输入</h2>\n            <textarea\n                    v-model=\"jsonInput\"\n                    placeholder=\"请输入 JSON 字符串\"\n                    class=\"json-input\"\n                    :class=\"{ error: errorMessage }\"\n            ></textarea>\n            <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\n            <div class=\"button-group\">\n                <button @click=\"formatJson\">格式化 JSON</button>\n                <button @click=\"compressJson\" class=\"compress-btn\">压缩 JSON</button>\n            </div>\n        </div>\n\n        <div class=\"output-area\">\n            <h2>格式化 / 压缩结果</h2>\n            <div v-if=\"formattedJson\" class=\"json-output\">\n                <json-pretty :data=\"parsedJson\" :deep=\"3\"></json-pretty>\n            </div>\n            <p v-else class=\"placeholder\">格式化或压缩后的 JSON 将在此显示</p>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport JsonPretty from \"vue-json-pretty\";\nimport \"vue-json-pretty/lib/styles.css\";\n\nexport default {\n    name: \"JsonFormatter\",\n    components: {\n        JsonPretty,\n    },\n    setup() {\n        const jsonInput = ref(\"\");\n        const formattedJson = ref(\"\");\n        const parsedJson = ref(null);\n        const errorMessage = ref(\"\");\n\n        // 格式化 JSON\n        const formatJson = () => {\n            try {\n                parsedJson.value = JSON.parse(jsonInput.value);\n                formattedJson.value = JSON.stringify(parsedJson.value, null, 2);\n                errorMessage.value = \"\";\n                jsonInput.value = formattedJson.value; // 更新输入框\n            } catch (error) {\n                errorMessage.value = `❌ JSON 格式错误：${error.message}`;\n                formattedJson.value = \"\";\n                parsedJson.value = null;\n            }\n        };\n\n        // 压缩 JSON\n        const compressJson = () => {\n            try {\n                parsedJson.value = JSON.parse(jsonInput.value);\n                formattedJson.value = JSON.stringify(parsedJson.value); // 无空格压缩\n                errorMessage.value = \"\";\n                jsonInput.value = formattedJson.value; // 更新输入框\n            } catch (error) {\n                errorMessage.value = `❌ JSON 格式错误：${error.message}`;\n                formattedJson.value = \"\";\n                parsedJson.value = null;\n            }\n        };\n\n        return {\n            jsonInput,\n            formattedJson,\n            parsedJson,\n            errorMessage,\n            formatJson,\n            compressJson,\n        };\n    },\n};\n</script>\n\n<style scoped>\n/* 页面整体 */\n.json-formatter {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 90vh; /* 让整体高度不超出屏幕 */\n    background: linear-gradient(135deg, #e3f2fd, #f1f8e9);\n    padding: 10px;\n}\n\n/* 输入、输出区域 */\n.input-area,\n.output-area {\n    width: 90%;\n    max-width: 800px;\n    background: #ffffff;\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\n    border-radius: 12px;\n    padding: 15px;\n    text-align: center;\n    flex: 1; /* 让输入和输出框平均分配空间 */\n    display: flex;\n    flex-direction: column;\n    overflow: hidden; /* 防止溢出 */\n}\n\n/* 标题 */\nh2 {\n    font-size: 18px;\n    font-weight: bold;\n    color: #333;\n    margin-bottom: 12px;\n}\n\n/* 输入框 */\n.json-input {\n    flex-grow: 1;\n    width: 100%;\n    padding: 12px;\n    font-size: 14px;\n    font-family: \"Courier New\", monospace;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    resize: none;\n    background: #fff;\n    transition: border-color 0.3s;\n    min-height: 100px;\n    max-height: 200px; /* 限制高度 */\n}\n\n.json-input:focus {\n    border-color: #42b983;\n    outline: none;\n}\n\n.json-input.error {\n    border-color: red;\n    background-color: #ffe6e6;\n}\n\n/* 按钮区域 */\n.button-group {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n}\n\n/* 按钮 */\nbutton {\n    padding: 10px 16px;\n    font-size: 14px;\n    background-color: #42b983;\n    color: white;\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: all 0.3s ease-in-out;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nbutton:hover {\n    background-color: #2d8b68;\n    transform: scale(1.05);\n}\n\n/* 压缩按钮 */\n.compress-btn {\n    background-color: #ff9800;\n}\n\n.compress-btn:hover {\n    background-color: #e68900;\n}\n\n/* 输出区域 */\n.output-area {\n    text-align: left;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n}\n\n/* JSON 预览区域 */\n.json-output {\n    flex-grow: 1;\n    padding: 15px;\n    border-radius: 8px;\n    font-size: 14px;\n    font-family: \"Courier New\", monospace;\n    overflow: auto; /* 允许滚动 */\n    border: 1px solid #444;\n    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);\n    white-space: pre-wrap;\n    word-break: break-word;\n}\n\n/* 预览区域占位符 */\n.placeholder {\n    color: #999;\n    font-size: 14px;\n    text-align: center;\n    margin-top: auto;\n    margin-bottom: auto;\n}\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAClBA,KAAK,EAAC;AAAY;;EAF/BC,GAAA;EAUmCD,KAAK,EAAC;;;EACxBA,KAAK,EAAC;AAAc;;EAMxBA,KAAK,EAAC;AAAa;;EAjBhCC,GAAA;EAmBsCD,KAAK,EAAC;;;EAnB5CC,GAAA;EAsBsBD,KAAK,EAAC;;;;uBArBxBE,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBFC,mBAAA,CAaM,OAbNC,UAaM,G,0BAZFD,mBAAA,CAAgB,YAAZ,SAAO,sB,gBACXA,mBAAA,CAKY;IATxB,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAK6BC,MAAA,CAAAC,SAAS,GAAAF,MAAA;IAClBG,WAAW,EAAC,cAAc;IAC1BV,KAAK,EAPzBW,eAAA,EAO0B,YAAY;MAAAC,KAAA,EACDJ,MAAA,CAAAK;IAAY;0CAHpBL,MAAA,CAAAC,SAAS,E,GAKjBD,MAAA,CAAAK,YAAY,I,cAArBX,mBAAA,CAAmE,KAAnEY,UAAmE,EAAAC,gBAAA,CAAnBP,MAAA,CAAAK,YAAY,oBAVxEG,mBAAA,gBAWYZ,mBAAA,CAGM,OAHNa,UAGM,GAFFb,mBAAA,CAA6C;IAApCc,OAAK,EAAAZ,MAAA,QAAAA,MAAA,UAAAa,IAAA,KAAEX,MAAA,CAAAY,UAAA,IAAAZ,MAAA,CAAAY,UAAA,IAAAD,IAAA,CAAU;KAAE,UAAQ,GACpCf,mBAAA,CAAmE;IAA1Dc,OAAK,EAAAZ,MAAA,QAAAA,MAAA,UAAAa,IAAA,KAAEX,MAAA,CAAAa,YAAA,IAAAb,MAAA,CAAAa,YAAA,IAAAF,IAAA,CAAY;IAAEnB,KAAK,EAAC;KAAe,SAAO,E,KAIlEI,mBAAA,CAMM,OANNkB,UAMM,G,0BALFlB,mBAAA,CAAmB,YAAf,YAAU,sBACHI,MAAA,CAAAe,aAAa,I,cAAxBrB,mBAAA,CAEM,OAFNsB,UAEM,GADFC,YAAA,CAAwDC,sBAAA;IAA1CC,IAAI,EAAEnB,MAAA,CAAAoB,UAAU;IAAGC,IAAI,EAAE;wDAE3C3B,mBAAA,CAAqD,KAArD4B,UAAqD,EAAvB,qBAAmB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
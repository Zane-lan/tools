{"ast":null,"code":"import { ref } from \"vue\";\nimport JsonPretty from \"vue-json-pretty\";\nimport \"vue-json-pretty/lib/styles.css\"; // 引入样式\n\nexport default {\n  name: \"ParseJson\",\n  components: {\n    JsonPretty\n  },\n  setup() {\n    const jsonInput = ref(\"\"); // 用户输入的 JSON 字符串\n    const formattedJson = ref(\"\"); // 格式化后的 JSON 字符串\n    const parsedJson = ref(null); // 解析后的 JSON 对象\n    const errorMessage = ref(\"\"); // 错误信息\n\n    // 格式化 JSON\n    const formatJson = () => {\n      try {\n        parsedJson.value = JSON.parse(jsonInput.value);\n        formattedJson.value = JSON.stringify(parsedJson.value, null, 2);\n        errorMessage.value = \"\";\n        jsonInput.value = formattedJson.value; // 更新输入框内容\n      } catch (error) {\n        errorMessage.value = `JSON 格式错误：${error.message}`;\n        formattedJson.value = \"\";\n        parsedJson.value = null;\n      }\n    };\n    return {\n      jsonInput,\n      formattedJson,\n      parsedJson,\n      errorMessage,\n      formatJson\n    };\n  }\n};","map":{"version":3,"names":["ref","JsonPretty","name","components","setup","jsonInput","formattedJson","parsedJson","errorMessage","formatJson","value","JSON","parse","stringify","error","message"],"sources":["/Volumes/data/project/my_web/tools/src/views/ParseJson.vue"],"sourcesContent":["<template>\n    <div class=\"json-formatter\">\n        <div class=\"container\">\n            <!-- 左侧输入区域 -->\n            <div class=\"input-area\">\n                <h2>JSON 输入</h2>\n                <textarea\n                        v-model=\"jsonInput\"\n                        placeholder=\"请输入 JSON 字符串\"\n                        class=\"json-input\"\n                        :class=\"{ error: errorMessage }\"\n                ></textarea>\n                <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\n                <button @click=\"formatJson\">格式化</button>\n            </div>\n\n            <!-- 右侧展示区域 -->\n            <div class=\"output-area\">\n                <h2>格式化结果</h2>\n                <div v-if=\"formattedJson\" class=\"json-output\">\n                    <json-pretty :data=\"parsedJson\"></json-pretty>\n                </div>\n                <p v-else class=\"placeholder\">格式化后的 JSON 将在此显示</p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {ref} from \"vue\";\nimport JsonPretty from \"vue-json-pretty\";\nimport \"vue-json-pretty/lib/styles.css\"; // 引入样式\n\nexport default {\n    name: \"ParseJson\",\n    components: {\n        JsonPretty,\n    },\n    setup() {\n        const jsonInput = ref(\"\"); // 用户输入的 JSON 字符串\n        const formattedJson = ref(\"\"); // 格式化后的 JSON 字符串\n        const parsedJson = ref(null); // 解析后的 JSON 对象\n        const errorMessage = ref(\"\"); // 错误信息\n\n        // 格式化 JSON\n        const formatJson = () => {\n            try {\n                parsedJson.value = JSON.parse(jsonInput.value);\n                formattedJson.value = JSON.stringify(parsedJson.value, null, 2);\n                errorMessage.value = \"\";\n                jsonInput.value = formattedJson.value; // 更新输入框内容\n            } catch (error) {\n                errorMessage.value = `JSON 格式错误：${error.message}`;\n                formattedJson.value = \"\";\n                parsedJson.value = null;\n            }\n        };\n\n        return {\n            jsonInput,\n            formattedJson,\n            parsedJson,\n            errorMessage,\n            formatJson,\n        };\n    },\n};\n</script>\n\n<style scoped>\n/* 页面整体居中 */\n.json-formatter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #f4f4f4;\n}\n\n/* 外层容器 */\n.container {\n    display: flex;\n    width: 80%;\n    max-width: 1200px;\n    background: white;\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    border-radius: 10px;\n    overflow: hidden;\n}\n\n/* 左侧输入区 & 右侧输出区 */\n.input-area,\n.output-area {\n    flex: 1;\n    padding: 20px;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n}\n\n.input-area {\n    border-right: 2px solid #ddd;\n    background: #f9f9f9;\n}\n\n.output-area {\n    background: #fff;\n}\n\n/* 标题 */\nh2 {\n    margin-bottom: 15px;\n    font-size: 18px;\n    font-weight: bold;\n    color: #333;\n}\n\n/* 输入框 */\n.json-input {\n    width: 100%;\n    height: 250px;\n    padding: 10px;\n    font-size: 14px;\n    font-family: monospace;\n    border: 1px solid #ccc;\n    border-radius: 6px;\n    resize: none;\n    background: #fff;\n}\n\n.json-input.error {\n    border-color: red;\n}\n\n/* 错误信息 */\n.error-message {\n    color: red;\n    font-size: 14px;\n    margin-top: 5px;\n}\n\n/* 格式化按钮 */\nbutton {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #42b983;\n    color: white;\n    border: none;\n    border-radius: 6px;\n    cursor: pointer;\n    margin-top: 15px;\n    transition: background 0.3s;\n}\n\nbutton:hover {\n    background-color: #369f6e;\n}\n\n/* JSON 预览区域 */\n.json-output {\n    background-color: #f9f9f9;\n    padding: 15px;\n    border-radius: 6px;\n    font-size: 14px;\n    font-family: monospace;\n    height: 250px;\n    overflow: auto;\n    border: 1px solid #ddd;\n}\n\n/* 预览区域占位符 */\n.placeholder {\n    color: #999;\n    font-size: 14px;\n    text-align: center;\n    margin-top: 50px;\n}\n</style>\n"],"mappings":"AA6BA,SAAQA,GAAG,QAAO,KAAK;AACvB,OAAOC,UAAS,MAAO,iBAAiB;AACxC,OAAO,gCAAgC,EAAE;;AAEzC,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,KAAKA,CAAA,EAAG;IACJ,MAAMC,SAAQ,GAAIL,GAAG,CAAC,EAAE,CAAC,EAAE;IAC3B,MAAMM,aAAY,GAAIN,GAAG,CAAC,EAAE,CAAC,EAAE;IAC/B,MAAMO,UAAS,GAAIP,GAAG,CAAC,IAAI,CAAC,EAAE;IAC9B,MAAMQ,YAAW,GAAIR,GAAG,CAAC,EAAE,CAAC,EAAE;;IAE9B;IACA,MAAMS,UAAS,GAAIA,CAAA,KAAM;MACrB,IAAI;QACAF,UAAU,CAACG,KAAI,GAAIC,IAAI,CAACC,KAAK,CAACP,SAAS,CAACK,KAAK,CAAC;QAC9CJ,aAAa,CAACI,KAAI,GAAIC,IAAI,CAACE,SAAS,CAACN,UAAU,CAACG,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QAC/DF,YAAY,CAACE,KAAI,GAAI,EAAE;QACvBL,SAAS,CAACK,KAAI,GAAIJ,aAAa,CAACI,KAAK,EAAE;MAC3C,EAAE,OAAOI,KAAK,EAAE;QACZN,YAAY,CAACE,KAAI,GAAI,aAAaI,KAAK,CAACC,OAAO,EAAE;QACjDT,aAAa,CAACI,KAAI,GAAI,EAAE;QACxBH,UAAU,CAACG,KAAI,GAAI,IAAI;MAC3B;IACJ,CAAC;IAED,OAAO;MACHL,SAAS;MACTC,aAAa;MACbC,UAAU;MACVC,YAAY;MACZC;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
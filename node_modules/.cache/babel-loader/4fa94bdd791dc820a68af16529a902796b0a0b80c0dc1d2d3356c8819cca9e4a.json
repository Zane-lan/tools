{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"tree-menu-container\"\n};\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = {\n  class: \"tree-menu\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"arrow\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TreeMenu = _resolveComponent(\"TreeMenu\", true);\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 只在顶层显示搜索框 \"), $props.isRoot ? (_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    value: $props.searchQuery,\n    onInput: _cache[0] || (_cache[0] = (...args) => $options.onInput && $options.onInput(...args)),\n    placeholder: \"Search...\",\n    class: \"search-input\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 树形菜单 \"), _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredMenu, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.name\n    }, [_createElementVNode(\"div\", {\n      onClick: $event => $options.handleItemClick(item),\n      class: \"menu-item\"\n    }, [_createCommentVNode(\" 高亮匹配项 \"), _createElementVNode(\"span\", {\n      innerHTML: $options.highlightMatch(item.name)\n    }, null, 8 /* PROPS */, _hoisted_5), item.children ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, _toDisplayString(item.isOpen ? '▼' : '▶'), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 8 /* PROPS */, _hoisted_4), _createCommentVNode(\" 递归渲染子菜单 \"), item.children && item.isOpen ? (_openBlock(), _createBlock(_component_TreeMenu, {\n      key: 0,\n      \"menu-data\": item.children,\n      \"search-query\": $props.searchQuery,\n      \"is-root\": false,\n      \"onUpdate:searchQuery\": _cache[1] || (_cache[1] = value => _ctx.$emit('update:searchQuery', value)),\n      onItemSelected: $options.handleItemSelected\n    }, null, 8 /* PROPS */, [\"menu-data\", \"search-query\", \"onItemSelected\"])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","$props","isRoot","value","searchQuery","onInput","_cache","args","$options","placeholder","_hoisted_2","_createElementVNode","_hoisted_3","_Fragment","_renderList","filteredMenu","item","name","onClick","$event","handleItemClick","innerHTML","highlightMatch","_hoisted_5","children","_hoisted_6","_toDisplayString","isOpen","_hoisted_4","_createBlock","_component_TreeMenu","_ctx","$emit","onItemSelected","handleItemSelected"],"sources":["/Volumes/data/project/my_web/tools/src/components/TreeMenu.vue"],"sourcesContent":["<template>\n    <div class=\"tree-menu-container\">\n        <!-- 只在顶层显示搜索框 -->\n        <input\n                v-if=\"isRoot\"\n                :value=\"searchQuery\"\n                @input=\"onInput\"\n                placeholder=\"Search...\"\n                class=\"search-input\"\n        />\n        <!-- 树形菜单 -->\n        <ul class=\"tree-menu\">\n            <li v-for=\"item in filteredMenu\" :key=\"item.name\">\n                <div @click=\"handleItemClick(item)\" class=\"menu-item\">\n                    <!-- 高亮匹配项 -->\n                    <span v-html=\"highlightMatch(item.name)\"></span>\n                    <span v-if=\"item.children\" class=\"arrow\">\n            {{ item.isOpen ? '▼' : '▶' }}\n          </span>\n                </div>\n                <!-- 递归渲染子菜单 -->\n                <TreeMenu\n                        v-if=\"item.children && item.isOpen\"\n                        :menu-data=\"item.children\"\n                        :search-query=\"searchQuery\"\n                        :is-root=\"false\"\n                        @update:searchQuery=\"(value) => $emit('update:searchQuery', value)\"\n                        @item-selected=\"handleItemSelected\"\n                />\n            </li>\n        </ul>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'TreeMenu',\n    props: {\n        menuData: {\n            type: Array,\n            required: true,\n        },\n        searchQuery: {\n            type: String,\n            default: '',\n        },\n        isRoot: {\n            type: Boolean,\n            default: true,\n        },\n    },\n    computed: {\n        // 过滤菜单项\n        filteredMenu() {\n            const query = this.searchQuery.toLowerCase();\n            if (!query) return this.menuData;\n\n            const filterItems = (items) => {\n                return items\n                        .map((item) => {\n                            // 复制对象以避免修改原始数据\n                            const newItem = { ...item };\n                            if (newItem.children) {\n                                newItem.children = filterItems(newItem.children);\n                                // 如果子菜单有匹配项，展开父菜单\n                                if (newItem.children.length > 0) {\n                                    newItem.isOpen = true;\n                                }\n                            }\n                            return newItem;\n                        })\n                        .filter((item) => {\n                            // 保留匹配项或其子项匹配的菜单项\n                            return (\n                                    item.name.toLowerCase().includes(query) ||\n                                    (item.children && item.children.length > 0)\n                            );\n                        });\n            };\n\n            return filterItems(this.menuData);\n        },\n    },\n    methods: {\n        // 处理菜单项点击\n        handleItemClick(item) {\n            if (item.children) {\n                item.isOpen = !item.isOpen;\n            } else {\n                this.$emit('item-selected', item); // 通知父组件选中了菜单项\n                this.$router.push(item.path); // 跳转到对应页面\n            }\n        },\n        // 高亮匹配的关键字\n        highlightMatch(text) {\n            const query = this.searchQuery.toLowerCase();\n            if (!query) return text;\n\n            const regex = new RegExp(`(${query})`, 'gi');\n            return text.replace(regex, '<span class=\"highlight\">$1</span>');\n        },\n        // 输入事件处理\n        onInput(event) {\n            this.$emit('update:searchQuery', event.target.value);\n        },\n        // 处理子菜单项选中\n        handleItemSelected(item) {\n            this.$emit('item-selected', item); // 向上传递选中事件\n        },\n    },\n};\n</script>\n\n<style>\n.tree-menu-container {\n    width: 100%;\n}\n\n.search-input {\n    width: 100%;\n    padding: 8px;\n    margin-bottom: 10px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 14px;\n}\n\n.tree-menu {\n    list-style-type: none;\n    padding-left: 20px;\n}\n\n.menu-item {\n    padding: 8px;\n    cursor: pointer;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.menu-item:hover {\n    background-color: #f0f0f0;\n}\n\n.arrow {\n    font-size: 12px;\n}\n\n.highlight {\n    background-color: yellow;\n    font-weight: bold;\n}\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAqB;mBADpC;;EAWYA,KAAK,EAAC;AAAW;mBAX7B;mBAAA;;EAAAC,GAAA;EAgB+CD,KAAK,EAAC;;;;uBAfjDE,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BFC,mBAAA,eAAkB,EAEJC,MAAA,CAAAC,MAAM,I,cADpBJ,mBAAA,CAME;IATVD,GAAA;IAKiBM,KAAK,EAAEF,MAAA,CAAAG,WAAW;IAClBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAH,OAAA,IAAAG,QAAA,CAAAH,OAAA,IAAAE,IAAA,CAAO;IACfE,WAAW,EAAC,WAAW;IACvBb,KAAK,EAAC;2CARtBc,UAAA,KAAAV,mBAAA,gBAUQA,mBAAA,UAAa,EACbW,mBAAA,CAmBK,MAnBLC,UAmBK,I,kBAlBDd,mBAAA,CAiBKe,SAAA,QA7BjBC,WAAA,CAY+BN,QAAA,CAAAO,YAAY,EAApBC,IAAI;yBAAflB,mBAAA,CAiBK;MAjB6BD,GAAG,EAAEmB,IAAI,CAACC;QACxCN,mBAAA,CAMM;MANAO,OAAK,EAAAC,MAAA,IAAEX,QAAA,CAAAY,eAAe,CAACJ,IAAI;MAAGpB,KAAK,EAAC;QACtCI,mBAAA,WAAc,EACdW,mBAAA,CAAgD;MAA1CU,SAAkC,EAA1Bb,QAAA,CAAAc,cAAc,CAACN,IAAI,CAACC,IAAI;4BAf1DM,UAAA,GAgBgCP,IAAI,CAACQ,QAAQ,I,cAAzB1B,mBAAA,CAEH,QAFG2B,UAEH,EAAAC,gBAAA,CADFV,IAAI,CAACW,MAAM,gCAjB1B3B,mBAAA,e,iBAAA4B,UAAA,GAoBgB5B,mBAAA,aAAgB,EAEFgB,IAAI,CAACQ,QAAQ,IAAIR,IAAI,CAACW,MAAM,I,cAD1CE,YAAA,CAOEC,mBAAA;MA5BlBjC,GAAA;MAuByB,WAAS,EAAEmB,IAAI,CAACQ,QAAQ;MACxB,cAAY,EAAEvB,MAAA,CAAAG,WAAW;MACzB,SAAO,EAAE,KAAK;MACd,sBAAkB,EAAAE,MAAA,QAAAA,MAAA,MAAGH,KAAK,IAAK4B,IAAA,CAAAC,KAAK,uBAAuB7B,KAAK;MAChE8B,cAAa,EAAEzB,QAAA,CAAA0B;gFA3BxClC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
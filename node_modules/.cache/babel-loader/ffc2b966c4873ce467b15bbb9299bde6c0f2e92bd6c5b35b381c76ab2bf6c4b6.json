{"ast":null,"code":"import { ref, onMounted, onUnmounted } from \"vue\";\nexport default {\n  name: \"TimeTools\",\n  setup() {\n    const timestamp = ref(Date.now());\n    const timeInput = ref(\"\");\n    const timestampInput = ref(\"\");\n    const convertedTimestamp = ref(null);\n    const convertedTime = ref(null);\n    let intervalId = null;\n    const updateTimestamp = () => {\n      timestamp.value = Date.now();\n    };\n    onMounted(() => {\n      intervalId = setInterval(updateTimestamp, 100);\n    });\n    onUnmounted(() => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    });\n    const copyTimestamp = text => {\n      navigator.clipboard.writeText(text.toString()).then(() => alert(\"已复制到剪贴板！\")).catch(err => console.error(\"复制失败：\", err));\n    };\n    const convertTimeToTimestamp = () => {\n      const date = new Date(timeInput.value);\n      if (isNaN(date.getTime())) {\n        alert(\"请输入正确的时间格式（YYYY-MM-DD HH:mm:ss）\");\n        return;\n      }\n      convertedTimestamp.value = date.getTime();\n    };\n    const convertTimestampToTime = () => {\n      const timestampValue = parseInt(timestampInput.value, 10);\n      if (isNaN(timestampValue)) {\n        alert(\"请输入正确的时间戳（毫秒）\");\n        return;\n      }\n      const date = new Date(timestampValue);\n      convertedTime.value = formatDate(date);\n    };\n    const formatDate = date => {\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\n      const day = String(date.getDate()).padStart(2, \"0\");\n      const hours = String(date.getHours()).padStart(2, \"0\");\n      const minutes = String(date.getMinutes()).padStart(2, \"0\");\n      const seconds = String(date.getSeconds()).padStart(2, \"0\");\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n    };\n    return {\n      timestamp,\n      timeInput,\n      timestampInput,\n      convertedTimestamp,\n      convertedTime,\n      copyTimestamp,\n      convertTimeToTimestamp,\n      convertTimestampToTime\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","name","setup","timestamp","Date","now","timeInput","timestampInput","convertedTimestamp","convertedTime","intervalId","updateTimestamp","value","setInterval","clearInterval","copyTimestamp","text","navigator","clipboard","writeText","toString","then","alert","catch","err","console","error","convertTimeToTimestamp","date","isNaN","getTime","convertTimestampToTime","timestampValue","parseInt","formatDate","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds"],"sources":["/Volumes/data/project/my_web/tools/src/views/TimeTools.vue"],"sourcesContent":["<template>\n    <div class=\"unix-timestamp\">\n        <div class=\"container\">\n            <!-- 实时时间戳 -->\n            <div class=\"section\">\n                <h2>当前 Unix 时间戳</h2>\n                <p class=\"timestamp\">{{ timestamp }}</p>\n                <button @click=\"copyTimestamp(timestamp)\">复制时间戳</button>\n            </div>\n\n            <!-- 时间转时间戳 -->\n            <div class=\"section\">\n                <h2>时间转时间戳</h2>\n                <div class=\"input-group\">\n                    <input v-model=\"timeInput\" placeholder=\"YYYY-MM-DD HH:mm:ss\" class=\"input\" />\n                    <button @click=\"convertTimeToTimestamp\">转换</button>\n                </div>\n                <p v-if=\"convertedTimestamp\" class=\"result\">\n                    时间戳：{{ convertedTimestamp }}\n                    <button @click=\"copyTimestamp(convertedTimestamp)\">复制</button>\n                </p>\n            </div>\n\n            <!-- 时间戳转时间 -->\n            <div class=\"section\">\n                <h2>时间戳转时间</h2>\n                <div class=\"input-group\">\n                    <input v-model=\"timestampInput\" placeholder=\"输入时间戳（毫秒）\" class=\"input\" />\n                    <button @click=\"convertTimestampToTime\">转换</button>\n                </div>\n                <p v-if=\"convertedTime\" class=\"result\">\n                    时间：{{ convertedTime }}\n                    <button @click=\"copyTimestamp(convertedTime)\">复制</button>\n                </p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted } from \"vue\";\n\nexport default {\n    name: \"TimeTools\",\n    setup() {\n        const timestamp = ref(Date.now());\n        const timeInput = ref(\"\");\n        const timestampInput = ref(\"\");\n        const convertedTimestamp = ref(null);\n        const convertedTime = ref(null);\n        let intervalId = null;\n\n        const updateTimestamp = () => {\n            timestamp.value = Date.now();\n        };\n\n        onMounted(() => {\n            intervalId = setInterval(updateTimestamp, 100);\n        });\n\n        onUnmounted(() => {\n            if (intervalId) {\n                clearInterval(intervalId);\n            }\n        });\n\n        const copyTimestamp = (text) => {\n            navigator.clipboard\n                    .writeText(text.toString())\n                    .then(() => alert(\"已复制到剪贴板！\"))\n                    .catch((err) => console.error(\"复制失败：\", err));\n        };\n\n        const convertTimeToTimestamp = () => {\n            const date = new Date(timeInput.value);\n            if (isNaN(date.getTime())) {\n                alert(\"请输入正确的时间格式（YYYY-MM-DD HH:mm:ss）\");\n                return;\n            }\n            convertedTimestamp.value = date.getTime();\n        };\n\n        const convertTimestampToTime = () => {\n            const timestampValue = parseInt(timestampInput.value, 10);\n            if (isNaN(timestampValue)) {\n                alert(\"请输入正确的时间戳（毫秒）\");\n                return;\n            }\n            const date = new Date(timestampValue);\n            convertedTime.value = formatDate(date);\n        };\n\n        const formatDate = (date) => {\n            const year = date.getFullYear();\n            const month = String(date.getMonth() + 1).padStart(2, \"0\");\n            const day = String(date.getDate()).padStart(2, \"0\");\n            const hours = String(date.getHours()).padStart(2, \"0\");\n            const minutes = String(date.getMinutes()).padStart(2, \"0\");\n            const seconds = String(date.getSeconds()).padStart(2, \"0\");\n            return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n        };\n\n        return {\n            timestamp,\n            timeInput,\n            timestampInput,\n            convertedTimestamp,\n            convertedTime,\n            copyTimestamp,\n            convertTimeToTimestamp,\n            convertTimestampToTime,\n        };\n    },\n};\n</script>\n\n<style scoped>\n/* 页面居中 */\n.unix-timestamp {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 94vh;\n    background-color: #f4f4f4;\n}\n\n/* 容器样式 */\n.container {\n    width: 90%;\n    max-width: 600px;\n    background: white;\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    border-radius: 10px;\n    padding: 20px;\n    text-align: center;\n}\n\n/* 每个模块 */\n.section {\n    margin-bottom: 30px;\n    padding: 20px;\n    border-radius: 8px;\n    background: #f9f9f9;\n}\n\n/* 标题 */\nh2 {\n    font-size: 18px;\n    font-weight: bold;\n    color: #333;\n    margin-bottom: 15px;\n}\n\n/* 实时时间戳 */\n.timestamp {\n    font-size: 24px;\n    font-weight: bold;\n    color: #42b983;\n    margin: 10px 0;\n}\n\n/* 输入框 + 按钮横向排列 */\n.input-group {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n}\n\n/* 输入框 */\n.input {\n    flex: 1;\n    padding: 10px;\n    font-size: 16px;\n    border: 1px solid #ccc;\n    border-radius: 6px;\n    text-align: center;\n}\n\n/* 按钮 */\nbutton {\n    padding: 10px 16px;\n    font-size: 16px;\n    background-color: #42b983;\n    color: white;\n    border: none;\n    border-radius: 6px;\n    cursor: pointer;\n    transition: background 0.3s;\n}\n\nbutton:hover {\n    background-color: #369f6e;\n}\n\n/* 转换结果 */\n.result {\n    font-size: 18px;\n    color: #333;\n    margin-top: 10px;\n}\n\n/* 复制按钮 */\n.result button {\n    margin-left: 10px;\n    padding: 6px 10px;\n    font-size: 14px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
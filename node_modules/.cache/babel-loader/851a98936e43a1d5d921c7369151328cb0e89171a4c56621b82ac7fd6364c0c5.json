{"ast":null,"code":"import TreeMenu from './components/TreeMenu.vue';\nexport default {\n  components: {\n    TreeMenu\n  },\n  data() {\n    return {\n      searchQuery: '',\n      // 搜索关键字\n      menuData: [{\n        name: '时间',\n        isOpen: false,\n        children: [{\n          name: '时间戳转换',\n          path: '/about'\n        }, {\n          name: 'Contact',\n          path: '/contact'\n        }]\n      }, {\n        name: 'Settings',\n        isOpen: false,\n        children: [{\n          name: 'Profile',\n          path: '/profile'\n        }, {\n          name: 'Security',\n          path: '/security'\n        }]\n      }]\n    };\n  },\n  methods: {\n    // 处理菜单项选中\n    handleItemSelected(item) {\n      this.searchQuery = ''; // 清除搜索框内容\n      this.expandParentMenu(item); // 展开父菜单\n    },\n    // 展开父菜单\n    expandParentMenu(item) {\n      const findParent = (menu, target) => {\n        for (const menuItem of menu) {\n          if (menuItem.children && menuItem.children.includes(target)) {\n            menuItem.isOpen = true;\n            return;\n          }\n          if (menuItem.children) {\n            findParent(menuItem.children, target);\n          }\n        }\n      };\n      findParent(this.menuData, item);\n    }\n  }\n};","map":{"version":3,"names":["TreeMenu","components","data","searchQuery","menuData","name","isOpen","children","path","methods","handleItemSelected","item","expandParentMenu","findParent","menu","target","menuItem","includes"],"sources":["/Volumes/data/project/my_web/tools/src/App.vue"],"sourcesContent":["<template>\n    <div class=\"app\">\n        <div class=\"sidebar\">\n            <!-- 使用 v-model 绑定 searchQuery -->\n            <TreeMenu\n                    :menu-data=\"menuData\"\n                    v-model:searchQuery=\"searchQuery\"\n                    @item-selected=\"handleItemSelected\"\n            />\n        </div>\n        <div class=\"content\">\n            <router-view />\n        </div>\n    </div>\n</template>\n\n<script>\nimport TreeMenu from './components/TreeMenu.vue';\n\nexport default {\n    components: {\n        TreeMenu,\n    },\n    data() {\n        return {\n            searchQuery: '', // 搜索关键字\n            menuData: [\n                {\n                    name: '时间',\n                    isOpen: false,\n                    children: [\n                        {\n                            name: '时间戳转换',\n                            path: '/about',\n                        },\n                        {\n                            name: 'Contact',\n                            path: '/contact',\n                        },\n                    ],\n                },\n                {\n                    name: 'Settings',\n                    isOpen: false,\n                    children: [\n                        {\n                            name: 'Profile',\n                            path: '/profile',\n                        },\n                        {\n                            name: 'Security',\n                            path: '/security',\n                        },\n                    ],\n                },\n            ],\n        };\n    },\n    methods: {\n        // 处理菜单项选中\n        handleItemSelected(item) {\n            this.searchQuery = ''; // 清除搜索框内容\n            this.expandParentMenu(item); // 展开父菜单\n        },\n        // 展开父菜单\n        expandParentMenu(item) {\n            const findParent = (menu, target) => {\n                for (const menuItem of menu) {\n                    if (menuItem.children && menuItem.children.includes(target)) {\n                        menuItem.isOpen = true;\n                        return;\n                    }\n                    if (menuItem.children) {\n                        findParent(menuItem.children, target);\n                    }\n                }\n            };\n            findParent(this.menuData, item);\n        },\n    },\n};\n</script>\n\n<style>\nbody {\n    margin: 0;\n    font-family: Arial, sans-serif;\n}\n\n.app {\n    display: flex;\n    height: 100vh;\n}\n\n.sidebar {\n    width: 250px;\n    background-color: #f5f5f5;\n    border-right: 1px solid #ddd;\n    padding: 20px;\n    overflow-y: auto;\n}\n\n.content {\n    flex: 1;\n    padding: 20px;\n    background-color: #fff;\n}\n</style>\n"],"mappings":"AAiBA,OAAOA,QAAO,MAAO,2BAA2B;AAEhD,eAAe;EACXC,UAAU,EAAE;IACRD;EACJ,CAAC;EACDE,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE,EAAE;MAAE;MACjBC,QAAQ,EAAE,CACN;QACIC,IAAI,EAAE,IAAI;QACVC,MAAM,EAAE,KAAK;QACbC,QAAQ,EAAE,CACN;UACIF,IAAI,EAAE,OAAO;UACbG,IAAI,EAAE;QACV,CAAC,EACD;UACIH,IAAI,EAAE,SAAS;UACfG,IAAI,EAAE;QACV,CAAC;MAET,CAAC,EACD;QACIH,IAAI,EAAE,UAAU;QAChBC,MAAM,EAAE,KAAK;QACbC,QAAQ,EAAE,CACN;UACIF,IAAI,EAAE,SAAS;UACfG,IAAI,EAAE;QACV,CAAC,EACD;UACIH,IAAI,EAAE,UAAU;UAChBG,IAAI,EAAE;QACV,CAAC;MAET,CAAC;IAET,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL;IACAC,kBAAkBA,CAACC,IAAI,EAAE;MACrB,IAAI,CAACR,WAAU,GAAI,EAAE,EAAE;MACvB,IAAI,CAACS,gBAAgB,CAACD,IAAI,CAAC,EAAE;IACjC,CAAC;IACD;IACAC,gBAAgBA,CAACD,IAAI,EAAE;MACnB,MAAME,UAAS,GAAIA,CAACC,IAAI,EAAEC,MAAM,KAAK;QACjC,KAAK,MAAMC,QAAO,IAAKF,IAAI,EAAE;UACzB,IAAIE,QAAQ,CAACT,QAAO,IAAKS,QAAQ,CAACT,QAAQ,CAACU,QAAQ,CAACF,MAAM,CAAC,EAAE;YACzDC,QAAQ,CAACV,MAAK,GAAI,IAAI;YACtB;UACJ;UACA,IAAIU,QAAQ,CAACT,QAAQ,EAAE;YACnBM,UAAU,CAACG,QAAQ,CAACT,QAAQ,EAAEQ,MAAM,CAAC;UACzC;QACJ;MACJ,CAAC;MACDF,UAAU,CAAC,IAAI,CAACT,QAAQ,EAAEO,IAAI,CAAC;IACnC;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
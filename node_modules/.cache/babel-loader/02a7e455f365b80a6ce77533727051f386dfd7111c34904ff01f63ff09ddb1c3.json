{"ast":null,"code":"import { ref } from \"vue\";\nimport JsonPretty from \"vue-json-pretty\";\nimport \"vue-json-pretty/lib/styles.css\"; // 引入样式\n\nexport default {\n  name: \"ParseJson\",\n  components: {\n    JsonPretty\n  },\n  setup() {\n    const jsonInput = ref(\"\"); // 用户输入的 JSON 字符串\n    const formattedJson = ref(\"\"); // 格式化后的 JSON 字符串\n    const parsedJson = ref(null); // 解析后的 JSON 对象\n    const errorMessage = ref(\"\"); // 错误信息\n    const expandDepth = ref(1); // 展开层级\n\n    // 格式化 JSON\n    const formatJson = () => {\n      try {\n        parsedJson.value = JSON.parse(jsonInput.value);\n        formattedJson.value = JSON.stringify(parsedJson.value, null, 2);\n        errorMessage.value = \"\";\n        jsonInput.value = formattedJson.value; // 更新输入框内容\n      } catch (error) {\n        errorMessage.value = `JSON 格式错误：${error.message}`;\n        formattedJson.value = \"\";\n        parsedJson.value = null;\n      }\n    };\n\n    // 切换展开/合并全部\n    const toggleExpandAll = () => {\n      expandDepth.value = expandDepth.value === 0 ? 3 : 0;\n    };\n    return {\n      jsonInput,\n      formattedJson,\n      parsedJson,\n      errorMessage,\n      expandDepth,\n      formatJson,\n      toggleExpandAll\n    };\n  }\n};","map":{"version":3,"names":["ref","JsonPretty","name","components","setup","jsonInput","formattedJson","parsedJson","errorMessage","expandDepth","formatJson","value","JSON","parse","stringify","error","message","toggleExpandAll"],"sources":["/Volumes/data/project/my_web/tools/src/views/ParseJson.vue"],"sourcesContent":["<template>\n    <div class=\"json-formatter\">\n        <!-- 左侧输入区域 -->\n        <div class=\"input-area\">\n      <textarea\n              v-model=\"jsonInput\"\n              placeholder=\"请输入 JSON 字符串\"\n              class=\"json-input\"\n              :class=\"{ error: errorMessage }\"\n      ></textarea>\n            <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\n            <button @click=\"formatJson\">格式化</button>\n        </div>\n\n        <!-- 右侧展示区域 -->\n        <div class=\"output-area\">\n            <div v-if=\"formattedJson\" class=\"json-output\">\n                <json-pretty :data=\"parsedJson\" :deep=\"expandDepth\"></json-pretty>\n                <div class=\"controls\">\n                    <button @click=\"toggleExpandAll\">\n                        {{ expandDepth === 0 ? \"展开全部\" : \"合并全部\" }}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport JsonPretty from \"vue-json-pretty\";\nimport \"vue-json-pretty/lib/styles.css\"; // 引入样式\n\nexport default {\n    name: \"ParseJson\",\n    components: {\n        JsonPretty,\n    },\n    setup() {\n        const jsonInput = ref(\"\"); // 用户输入的 JSON 字符串\n        const formattedJson = ref(\"\"); // 格式化后的 JSON 字符串\n        const parsedJson = ref(null); // 解析后的 JSON 对象\n        const errorMessage = ref(\"\"); // 错误信息\n        const expandDepth = ref(1); // 展开层级\n\n        // 格式化 JSON\n        const formatJson = () => {\n            try {\n                parsedJson.value = JSON.parse(jsonInput.value);\n                formattedJson.value = JSON.stringify(parsedJson.value, null, 2);\n                errorMessage.value = \"\";\n                jsonInput.value = formattedJson.value; // 更新输入框内容\n            } catch (error) {\n                errorMessage.value = `JSON 格式错误：${error.message}`;\n                formattedJson.value = \"\";\n                parsedJson.value = null;\n            }\n        };\n\n        // 切换展开/合并全部\n        const toggleExpandAll = () => {\n            expandDepth.value = expandDepth.value === 0 ? 3 : 0;\n        };\n\n        return {\n            jsonInput,\n            formattedJson,\n            parsedJson,\n            errorMessage,\n            expandDepth,\n            formatJson,\n            toggleExpandAll,\n        };\n    },\n};\n</script>\n\n<style scoped>\n.json-formatter {\n    display: flex;\n    height: 80vh;\n    font-family: Arial, sans-serif;\n}\n\n.input-area,\n.output-area {\n    flex: 1;\n    padding: 20px;\n    box-sizing: border-box;\n}\n\n.input-area {\n    border-right: 1px solid #ccc;\n}\n\n.json-input {\n    width: 100%;\n    height: 70%;\n    padding: 10px;\n    font-size: 14px;\n    font-family: monospace;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    resize: none;\n}\n\n.json-input.error {\n    border-color: red;\n}\n\n.error-message {\n    color: red;\n    font-size: 14px;\n    margin-top: 10px;\n}\n\nbutton {\n    padding: 8px 16px;\n    font-size: 14px;\n    background-color: #42b983;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    margin-top: 10px;\n}\n\nbutton:hover {\n    background-color: #369f6e;\n}\n\n.output-area {\n    overflow-y: auto;\n}\n\n.json-output {\n    background-color: #f9f9f9;\n    padding: 10px;\n    border-radius: 4px;\n    height: 100%;\n}\n\n.controls {\n    margin-top: 10px;\n}\n</style>\n"],"mappings":"AA6BA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,UAAS,MAAO,iBAAiB;AACxC,OAAO,gCAAgC,EAAE;;AAEzC,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,KAAKA,CAAA,EAAG;IACJ,MAAMC,SAAQ,GAAIL,GAAG,CAAC,EAAE,CAAC,EAAE;IAC3B,MAAMM,aAAY,GAAIN,GAAG,CAAC,EAAE,CAAC,EAAE;IAC/B,MAAMO,UAAS,GAAIP,GAAG,CAAC,IAAI,CAAC,EAAE;IAC9B,MAAMQ,YAAW,GAAIR,GAAG,CAAC,EAAE,CAAC,EAAE;IAC9B,MAAMS,WAAU,GAAIT,GAAG,CAAC,CAAC,CAAC,EAAE;;IAE5B;IACA,MAAMU,UAAS,GAAIA,CAAA,KAAM;MACrB,IAAI;QACAH,UAAU,CAACI,KAAI,GAAIC,IAAI,CAACC,KAAK,CAACR,SAAS,CAACM,KAAK,CAAC;QAC9CL,aAAa,CAACK,KAAI,GAAIC,IAAI,CAACE,SAAS,CAACP,UAAU,CAACI,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QAC/DH,YAAY,CAACG,KAAI,GAAI,EAAE;QACvBN,SAAS,CAACM,KAAI,GAAIL,aAAa,CAACK,KAAK,EAAE;MAC3C,EAAE,OAAOI,KAAK,EAAE;QACZP,YAAY,CAACG,KAAI,GAAI,aAAaI,KAAK,CAACC,OAAO,EAAE;QACjDV,aAAa,CAACK,KAAI,GAAI,EAAE;QACxBJ,UAAU,CAACI,KAAI,GAAI,IAAI;MAC3B;IACJ,CAAC;;IAED;IACA,MAAMM,eAAc,GAAIA,CAAA,KAAM;MAC1BR,WAAW,CAACE,KAAI,GAAIF,WAAW,CAACE,KAAI,KAAM,IAAI,IAAI,CAAC;IACvD,CAAC;IAED,OAAO;MACHN,SAAS;MACTC,aAAa;MACbC,UAAU;MACVC,YAAY;MACZC,WAAW;MACXC,UAAU;MACVO;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"unix-timestamp\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"section\"\n};\nconst _hoisted_4 = {\n  class: \"timestamp\"\n};\nconst _hoisted_5 = {\n  class: \"section\"\n};\nconst _hoisted_6 = {\n  class: \"input-group\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"result\"\n};\nconst _hoisted_8 = {\n  class: \"section\"\n};\nconst _hoisted_9 = {\n  class: \"input-group\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"result\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 实时时间戳 \"), _createElementVNode(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"当前 Unix 时间戳\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_4, _toDisplayString($setup.timestamp), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.copyTimestamp($setup.timestamp))\n  }, \"复制时间戳\")]), _createCommentVNode(\" 时间转时间戳 \"), _createElementVNode(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"时间转时间戳\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.timeInput = $event),\n    placeholder: \"YYYY-MM-DD HH:mm:ss\",\n    class: \"input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.timeInput]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.convertTimeToTimestamp && $setup.convertTimeToTimestamp(...args))\n  }, \"转换\")]), $setup.convertedTimestamp ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, [_createTextVNode(\" 时间戳：\" + _toDisplayString($setup.convertedTimestamp) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $setup.copyTimestamp($setup.convertedTimestamp))\n  }, \"复制\")])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 时间戳转时间 \"), _createElementVNode(\"div\", _hoisted_8, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"时间戳转时间\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.timestampInput = $event),\n    placeholder: \"输入时间戳（毫秒）\",\n    class: \"input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.timestampInput]]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $setup.convertTimestampToTime && $setup.convertTimestampToTime(...args))\n  }, \"转换\")]), $setup.convertedTime ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, [_createTextVNode(\" 时间：\" + _toDisplayString($setup.convertedTime) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = $event => $setup.copyTimestamp($setup.convertedTime))\n  }, \"复制\")])) : _createCommentVNode(\"v-if\", true)])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","_toDisplayString","$setup","timestamp","onClick","_cache","$event","copyTimestamp","_hoisted_5","_hoisted_6","timeInput","placeholder","args","convertTimeToTimestamp","convertedTimestamp","_hoisted_7","_createTextVNode","_hoisted_8","_hoisted_9","timestampInput","convertTimestampToTime","convertedTime","_hoisted_10"],"sources":["/Volumes/data/project/my_web/tools/src/views/TimeTools.vue"],"sourcesContent":["<template>\n    <div class=\"unix-timestamp\">\n        <div class=\"container\">\n            <!-- 实时时间戳 -->\n            <div class=\"section\">\n                <h2>当前 Unix 时间戳</h2>\n                <p class=\"timestamp\">{{ timestamp }}</p>\n                <button @click=\"copyTimestamp(timestamp)\">复制时间戳</button>\n            </div>\n\n            <!-- 时间转时间戳 -->\n            <div class=\"section\">\n                <h2>时间转时间戳</h2>\n                <div class=\"input-group\">\n                    <input v-model=\"timeInput\" placeholder=\"YYYY-MM-DD HH:mm:ss\" class=\"input\" />\n                    <button @click=\"convertTimeToTimestamp\">转换</button>\n                </div>\n                <p v-if=\"convertedTimestamp\" class=\"result\">\n                    时间戳：{{ convertedTimestamp }}\n                    <button @click=\"copyTimestamp(convertedTimestamp)\">复制</button>\n                </p>\n            </div>\n\n            <!-- 时间戳转时间 -->\n            <div class=\"section\">\n                <h2>时间戳转时间</h2>\n                <div class=\"input-group\">\n                    <input v-model=\"timestampInput\" placeholder=\"输入时间戳（毫秒）\" class=\"input\" />\n                    <button @click=\"convertTimestampToTime\">转换</button>\n                </div>\n                <p v-if=\"convertedTime\" class=\"result\">\n                    时间：{{ convertedTime }}\n                    <button @click=\"copyTimestamp(convertedTime)\">复制</button>\n                </p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted } from \"vue\";\n\nexport default {\n    name: \"TimeTools\",\n    setup() {\n        const timestamp = ref(Date.now());\n        const timeInput = ref(\"\");\n        const timestampInput = ref(\"\");\n        const convertedTimestamp = ref(null);\n        const convertedTime = ref(null);\n        let intervalId = null;\n\n        const updateTimestamp = () => {\n            timestamp.value = Date.now();\n        };\n\n        onMounted(() => {\n            intervalId = setInterval(updateTimestamp, 100);\n        });\n\n        onUnmounted(() => {\n            if (intervalId) {\n                clearInterval(intervalId);\n            }\n        });\n\n        const copyTimestamp = (text) => {\n            navigator.clipboard\n                    .writeText(text.toString())\n                    .then(() => alert(\"已复制到剪贴板！\"))\n                    .catch((err) => console.error(\"复制失败：\", err));\n        };\n\n        const convertTimeToTimestamp = () => {\n            const date = new Date(timeInput.value);\n            if (isNaN(date.getTime())) {\n                alert(\"请输入正确的时间格式（YYYY-MM-DD HH:mm:ss）\");\n                return;\n            }\n            convertedTimestamp.value = date.getTime();\n        };\n\n        const convertTimestampToTime = () => {\n            const timestampValue = parseInt(timestampInput.value, 10);\n            if (isNaN(timestampValue)) {\n                alert(\"请输入正确的时间戳（毫秒）\");\n                return;\n            }\n            const date = new Date(timestampValue);\n            convertedTime.value = formatDate(date);\n        };\n\n        const formatDate = (date) => {\n            const year = date.getFullYear();\n            const month = String(date.getMonth() + 1).padStart(2, \"0\");\n            const day = String(date.getDate()).padStart(2, \"0\");\n            const hours = String(date.getHours()).padStart(2, \"0\");\n            const minutes = String(date.getMinutes()).padStart(2, \"0\");\n            const seconds = String(date.getSeconds()).padStart(2, \"0\");\n            return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n        };\n\n        return {\n            timestamp,\n            timeInput,\n            timestampInput,\n            convertedTimestamp,\n            convertedTime,\n            copyTimestamp,\n            convertTimeToTimestamp,\n            convertTimestampToTime,\n        };\n    },\n};\n</script>\n\n<style scoped>\n/* 页面居中 */\n.unix-timestamp {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #f4f4f4;\n}\n\n/* 容器样式 */\n.container {\n    width: 90%;\n    max-width: 600px;\n    background: white;\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    border-radius: 10px;\n    padding: 20px;\n    text-align: center;\n}\n\n/* 每个模块 */\n.section {\n    margin-bottom: 30px;\n    padding: 20px;\n    border-radius: 8px;\n    background: #f9f9f9;\n}\n\n/* 标题 */\nh2 {\n    font-size: 18px;\n    font-weight: bold;\n    color: #333;\n    margin-bottom: 15px;\n}\n\n/* 实时时间戳 */\n.timestamp {\n    font-size: 24px;\n    font-weight: bold;\n    color: #42b983;\n    margin: 10px 0;\n}\n\n/* 输入框 + 按钮横向排列 */\n.input-group {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n}\n\n/* 输入框 */\n.input {\n    flex: 1;\n    padding: 10px;\n    font-size: 16px;\n    border: 1px solid #ccc;\n    border-radius: 6px;\n    text-align: center;\n}\n\n/* 按钮 */\nbutton {\n    padding: 10px 16px;\n    font-size: 16px;\n    background-color: #42b983;\n    color: white;\n    border: none;\n    border-radius: 6px;\n    cursor: pointer;\n    transition: background 0.3s;\n}\n\nbutton:hover {\n    background-color: #369f6e;\n}\n\n/* 转换结果 */\n.result {\n    font-size: 18px;\n    color: #333;\n    margin-top: 10px;\n}\n\n/* 复制按钮 */\n.result button {\n    margin-left: 10px;\n    padding: 6px 10px;\n    font-size: 14px;\n}\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAClBA,KAAK,EAAC;AAAW;;EAEbA,KAAK,EAAC;AAAS;;EAEbA,KAAK,EAAC;AAAW;;EAKnBA,KAAK,EAAC;AAAS;;EAEXA,KAAK,EAAC;AAAa;;EAbxCC,GAAA;EAiB6CD,KAAK,EAAC;;;EAOlCA,KAAK,EAAC;AAAS;;EAEXA,KAAK,EAAC;AAAa;;EA1BxCC,GAAA;EA8BwCD,KAAK,EAAC;;;uBA7B1CE,mBAAA,CAmCM,OAnCNC,UAmCM,GAlCFC,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCFC,mBAAA,WAAc,EACdF,mBAAA,CAIM,OAJNG,UAIM,G,0BAHFH,mBAAA,CAAoB,YAAhB,aAAW,sBACfA,mBAAA,CAAwC,KAAxCI,UAAwC,EAAAC,gBAAA,CAAhBC,MAAA,CAAAC,SAAS,kBACjCP,mBAAA,CAAwD;IAA/CQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,MAAA,CAAAK,aAAa,CAACL,MAAA,CAAAC,SAAS;KAAG,OAAK,E,GAGnDL,mBAAA,YAAe,EACfF,mBAAA,CAUM,OAVNY,UAUM,G,0BATFZ,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAGM,OAHNa,UAGM,G,gBAFFb,mBAAA,CAA6E;IAdjG,uBAAAS,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAcoCJ,MAAA,CAAAQ,SAAS,GAAAJ,MAAA;IAAEK,WAAW,EAAC,qBAAqB;IAACnB,KAAK,EAAC;iDAAnDU,MAAA,CAAAQ,SAAS,E,GACzBd,mBAAA,CAAmD;IAA1CQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEV,MAAA,CAAAW,sBAAA,IAAAX,MAAA,CAAAW,sBAAA,IAAAD,IAAA,CAAsB;KAAE,IAAE,E,GAErCV,MAAA,CAAAY,kBAAkB,I,cAA3BpB,mBAAA,CAGI,KAHJqB,UAGI,GApBpBC,gBAAA,CAiB4D,OACpC,GAAAf,gBAAA,CAAGC,MAAA,CAAAY,kBAAkB,IAAG,GAC5B,iBAAAlB,mBAAA,CAA8D;IAArDQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,MAAA,CAAAK,aAAa,CAACL,MAAA,CAAAY,kBAAkB;KAAG,IAAE,E,KAnBzEhB,mBAAA,e,GAuBYA,mBAAA,YAAe,EACfF,mBAAA,CAUM,OAVNqB,UAUM,G,0BATFrB,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAGM,OAHNsB,UAGM,G,gBAFFtB,mBAAA,CAAwE;IA3B5F,uBAAAS,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA2BoCJ,MAAA,CAAAiB,cAAc,GAAAb,MAAA;IAAEK,WAAW,EAAC,WAAW;IAACnB,KAAK,EAAC;iDAA9CU,MAAA,CAAAiB,cAAc,E,GAC9BvB,mBAAA,CAAmD;IAA1CQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEV,MAAA,CAAAkB,sBAAA,IAAAlB,MAAA,CAAAkB,sBAAA,IAAAR,IAAA,CAAsB;KAAE,IAAE,E,GAErCV,MAAA,CAAAmB,aAAa,I,cAAtB3B,mBAAA,CAGI,KAHJ4B,WAGI,GAjCpBN,gBAAA,CA8BuD,MAChC,GAAAf,gBAAA,CAAGC,MAAA,CAAAmB,aAAa,IAAG,GACtB,iBAAAzB,mBAAA,CAAyD;IAAhDQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,MAAA,CAAAK,aAAa,CAACL,MAAA,CAAAmB,aAAa;KAAG,IAAE,E,KAhCpEvB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}